{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "TadHack2021 API Documentation",
    "x-logo": {
      "url": "../images/logo.png"
    }
  },
  "tags": [
    {
      "name": "sms/send",
      "description": " This service allows the user to send SMS to one or more terminals (phones or any SMS-enabled device) from their application.\n\n SMS send service supports only POST HTTP requests. This is used when sending SMS to a mobile phone from an application.\n\n An application wishing to initiate an MT SMS message should use this operation type. "
    },
    {
      "name": "sms/receive",
      "description": " This service retrieves the SMS sent to the web application. Receive service returns only a list of SMS messages received since the previous invocation of the method. "
    },
    {
      "name": "sms/report",
      "description": " When performing a SendSms Operation if an application has requested for a Delivery Response message from the Message Centre, then TAP will initiate the Delivery Report service to hand over the Delivery Response message to the application. The messageId should be used to match the MT response with the Delivery Report. "
    },
    {
      "name": "ussd/send",
      "description": " This service is used when sending USSD messages to a mobile phone from an application.USSD send service supports only POST HTTP requests."
    },
    {
      "name": "ussd/receive",
      "description": " This service allows TAP to deliver MO messages to the application using HTTP – based API. The flow of messages is initiated by a MO request sent to an application,TAP will deliver the message to the application as an acknowledgement. Hence it could be either request-response exchange or a request-exception exchange.\n\n Receive USSD request is a MO message which will be sent to the application through hSenid Mobile APIs as a delivery request. "
    },
    {
      "name": "caas/directDebit",
      "description": " This service charges a specific amount from a subscriber’s account. "
    },
    {
      "name": "subscription/userSubscription",
      "description": "This service handles user subscription process(subscription/unsubscription)"
    },
    {
      "name": "subscription/baseSize",
      "description": "This service returns the number of registered subscribers"
    },
    {
      "name": "subscription/subscriberStatus",
      "description": "This service returns the user subscription status(unregistered,registered)"
    },
    {
      "name": "subscription/notify",
      "description": "This service sends notifications to the users"
    },
    {
      "name": "otp/request",
      "description": " This service is used by the developer to request an OTP for a subscriber's MSISDN. Upon the request, hSenidMobile APIS will generate and send an OTP to the subscriber's MSISDN. This OTP must be entered by the subscriber into the mobile/web application to activate a subscription. "
    },
    {
      "name": "otp/verify",
      "description": " This service is used by the developer to verify an OTP entered by a subscriber into the application. Upon a successful verification the subscription process of hSenidMobile APIs will be activated. "
    },
    {
      "name": "lbs/locate",
      "description": "This service allows to send and receive location requests using a REST based API to find the location of users and create rich & real-time applications. The Request Service of this API enables the Service Provider application to request location of a particular mobile number and receive the location as a response."
    },
    {
      "name": "ivr/responseOfSimpleIVRMenuServices",
      "description": "This service allows to send and receive location requests using a REST based API to find the location of users and create rich & real-time applications. The Request Service of this API enables the Service Provider application to request location of a particular mobile number and receive the location as a response."
    },
    {
      "name": "ivr/responseOfSingleAudioServices\n",
      "description": "This service allows to send and receive location requests using a REST based API to find the location of users and create rich & real-time applications. The Request Service of this API enables the Service Provider application to request location of a particular mobile number and receive the location as a response."
    }
  ],
  "x-tagGroups": [
    {
      "name": "sms",
      "tags": [
        "sms/send",
        "sms/receive",
        "sms/report"
      ]
    },
    {
      "name": "ussd",
      "tags": [
        "ussd/send",
        "ussd/receive"
      ]
    },
    {
      "name": "caas",
      "tags": [
        "caas/directDebit"
      ]
    },
    {
      "name": "subscription",
      "tags": [
        "subscription/userSubscription",
        "subscription/baseSize",
        "subscription/subscriberStatus",
        "subscription/getSubscriberChargingInfo",
        "subscription/notify"
      ]
    },
    {
      "name": "otp",
      "tags": [
        "otp/request",
        "otp/verify"
      ]
    },
    {
      "name": "lbs",
      "tags": [
        "lbs/locate"
      ]
    },
    {
      "name": "ivr",
      "tags": [
        "ivr/responseOfSimpleIVRMenuServices",
        "ivr/responseOfSingleAudioServices"
      ]
    }
  ],
  "paths": {
    "/sms/send": {
      "post": {
        "tags": [
          "sms/send"
        ],
        "summary": "SMS Mobile Termination",
        "description": "",
        "operationId": "smsSendServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/sendServices"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSendServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": {
              "$ref": "../../code_samples/sms/java/locateServices.txt"
            }
          },
          {
            "lang": "PHP",
            "source": {
              "$ref": "../../code_samples/sms/PHP/locateServices.txt"
            }
          },
          {
            "lang": "javaScript",
            "source": {
              "$ref": "../../code_samples/sms/javaScript/locateServices.txt"
            }
          },
          {
            "lang": ".net",
            "source": {
              "$ref": "../../code_samples/sms/.net/locateServices.txt"
            }
          }
        ]
      }
    },
    "/sms/receive": {
      "post": {
        "tags": [
          "sms/receive"
        ],
        "summary": "SMS Mobile Origination",
        "description": "",
        "operationId": "smsReceiveServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/receiveServices"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfReceiveServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/sms/report": {
      "post": {
        "tags": [
          "sms/report"
        ],
        "summary": "Delivery Status Report Service",
        "description": "",
        "operationId": "reportServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/reportServices"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfReportServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/ussd/send": {
      "post": {
        "tags": [
          "ussd/send"
        ],
        "summary": "Ussd Send Services",
        "description": "",
        "operationId": "ussdSendServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/sendServices-2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSendServices-2"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/ussd/receive": {
      "post": {
        "tags": [
          "ussd/receive"
        ],
        "summary": "Ussd Receive Services",
        "description": "",
        "operationId": "ussdReceiveServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/receiveServices-2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfReceiveServices-2"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/caas/direct/debit": {
      "post": {
        "tags": [
          "caas/directDebit"
        ],
        "summary": "Direct Debit",
        "description": "",
        "operationId": "directDebit",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/directDebit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfDirectDebit"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/subscription/send": {
      "post": {
        "tags": [
          "subscription/userSubscription"
        ],
        "summary": "User Subscription",
        "description": "",
        "operationId": "userSubscription",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/userSubscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfUserSubscription"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/subscription/query-base": {
      "post": {
        "tags": [
          "subscription/baseSize"
        ],
        "summary": "Base Size",
        "description": "",
        "operationId": "baseSize",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/baseSize"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfBaseSize"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/subscription/getStatus": {
      "post": {
        "tags": [
          "subscription/subscriberStatus"
        ],
        "summary": "Subscriber Status",
        "description": "",
        "operationId": "subscriberStatus",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/subscriberStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSubscriberStatus"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/subscription/getSubscriberChargingInfo": {
      "post": {
        "tags": [
          "subscription/getSubscriberChargingInfo"
        ],
        "summary": "Get Subscriber Charging Info",
        "description": "",
        "operationId": "getSubscriberChargingInfo",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/getSubscriberChargingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfgetSubscriberChargingInfo"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/subscription/notify": {
      "post": {
        "tags": [
          "subscription/notify"
        ],
        "summary": "Subscriber Notifications",
        "description": "",
        "operationId": "subscriberNotify",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/subscriberNotify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSubscriberNotify"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/otp/request": {
      "post": {
        "tags": [
          "otp/request"
        ],
        "summary": "Request OTP ",
        "description": "",
        "operationId": "otpRequest",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/otpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfOtpRequest"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/otp/verify": {
      "post": {
        "tags": [
          "otp/verify"
        ],
        "summary": "Verify OTP",
        "description": "",
        "operationId": "otpVerify",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/otpVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfOtpVerify"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/lbs/locate": {
      "post": {
        "tags": [
          "lbs/locate"
        ],
        "summary": "Get Location",
        "description": "This service allows to send and receive location requests using a REST based API to find the location of users and create rich & real-time applications. The Request Service of this API enables the Service Provider application to request location of a particular mobile number and receive the location as a response.",
        "operationId": "lblLocateServices",
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/locateServices"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfLocateServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/ivr/responseOfSimpleIVRMenuServices": {
      "post": {
        "tags": [
          "ivr/responseOfSimpleIVRMenuServices"
        ],
        "summary": "Interactive Voice Response",
        "description": "IVR (Interactive Voice Response) uses pre-recorded voice prompts and menus to provide information and options in order to receive responses from the users via keypad dialling. IVR applications are programs that control and respond to calls on the IVR platform. In creating an IVR application, developer needs to upload the audio files which need to be played and the JSON response formats which are required to manage the audio files to the hosting server. Once a user dials an IVR number, the call is received by the platform. Then the platform routes the call to the relevant application and sends the response to the call listener.\nA developer can create two types of IVR menus. Single Audio Response: When a user calls the IVR number only a single audio file is played. Simple IVR Menu: When a user calls the IVR number he/she first listens to a generic message that provides a list of options, requiring an input. Then based on the input of the caller the next audio is played. This sequence can be continued until the required closure is obtained, when the caller receives the desired outcome and terminates the call.",
        "operationId": "ivrServices",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSimpleIVRMenuServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    },
    "/ivr/responseOfSingleAudioServices": {
      "post": {
        "tags": [
          "ivr/responseOfSingleAudioServices"
        ],
        "summary": "Interactive Voice Response",
        "description": "IVR (Interactive Voice Response) uses pre-recorded voice prompts and menus to provide information and options in order to receive responses from the users via keypad dialling. IVR applications are programs that control and respond to calls on the IVR platform. In creating an IVR application, developer needs to upload the audio files which need to be played and the JSON response formats which are required to manage the audio files to the hosting server. Once a user dials an IVR number, the call is received by the platform. Then the platform routes the call to the relevant application and sends the response to the call listener.\nA developer can create two types of IVR menus. Single Audio Response: When a user calls the IVR number only a single audio file is played. Simple IVR Menu: When a user calls the IVR number he/she first listens to a generic message that provides a list of options, requiring an input. Then based on the input of the caller the next audio is played. This sequence can be continued until the required closure is obtained, when the caller receives the desired outcome and terminates the call.",
        "operationId": "ivrServices",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/responseOfSingleAudioServices"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Java",
            "source": "coming soon"
          },
          {
            "lang": "PHP",
            "source": "coming soon"
          },
          {
            "lang": "javaScript",
            "source": "coming soon"
          },
          {
            "lang": ".net",
            "source": "coming soon"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.hSenidMobile.lk"
    }
  ],
  "components": {
    "schemas": {
      "type": {
        "allOf": [
          {
            "$ref": "#/components/schemas/index"
          },
          {
            "$ref": "#/components/schemas/index-2"
          },
          {
            "$ref": "#/components/schemas/index-3"
          },
          {
            "$ref": "#/components/schemas/index-4"
          },
          {
            "$ref": "#/components/schemas/index-5"
          },
          {
            "$ref": "#/components/schemas/index-6"
          },
          {
            "$ref": "#/components/schemas/index-7"
          }
        ]
      },
      "sendServices": {
        "type": "object",
        "required": [
          "version",
          "applicationId",
          "password",
          "message",
          "destinationAddresses"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_999999",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "password",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "message": {
            "type": "string",
            "example": "Hello",
            "description": "Content of the message that needs to be sent.\n\nMessages over the limit shall be broken up by the platform before sending"
          },
          "destinationAddresses": {
            "type": "array",
            "description": "List of destination addresses should be telephone numbers.(tel - for MSISDN).\n\ntel:94776177301.\n\nAddress can also have the value - tel: all\n\n which will in return be a message to the subscribed base of the application \n\nat least one should be specified\n\nNote : tel might be a masked number depending on the type of application",
            "items": {
              "type": "string",
              "example": "tel:94776177301"
            }
          },
          "sourceAddress": {
            "type": "string",
            "example": "77000",
            "description": "Address of the source.\n\nsourceAddress: tel:94776177301\n\n at least one will be specified"
          },
          "deliveryStatusRequest": {
            "type": "string",
            "enum": [
              0,
              1
            ],
            "example": "1",
            "description": "Indicates the need of a Delivery Status Report for the message.\n\n 0 - Delivery Report not required\n\n1 - Delivery Report Required"
          },
          "encoding": {
            "type": "string",
            "enum": [
              0,
              240,
              245
            ],
            "example": "245",
            "description": "Encoding scheme used in the message\n\nIf not specified taken as Text\n\nIf the encoding type is “Binary” then the message content will be represented as hex encoded.\n\n0 - Text\n\n240 - Flash SMS\n\n245 - Binary SMS"
          },
          "binaryHeader": {
            "type": "string",
            "format": "hexadecimal",
            "example": "526574697265206170706c69636174696f6e20616e642072656c6561736520524b7320696620666f756e642065787069726564",
            "description": "For advanced type of messages where the binary header shall be sent from the application"
          }
        }
      },
      "destinationResponses": {
        "type": "object",
        "description": "The list of responses for the full list of addresses.It will be a collection with individual entry for each element in the address list of the request.address,timeStamp - Processed Time stamp,messageId - Message Identifier,statusCode - Status Code,statusDetail – Status detail",
        "properties": {
          "timeStamp": {
            "type": "string",
            "example": "20190103165801"
          },
          "address": {
            "type": "string",
            "example": "tel:94776177301"
          },
          "messageId": {
            "type": "string",
            "example": "101901031657410007"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1311",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1331",
              "E1334",
              "E1335",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ],
            "description": "The status code for the entire request",
            "example": "S1000"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success",
            "description": " The status detail for the entire request\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send request to application <application-id>. Please use a provisioned system to send request or contact system admin to provision the new IP. E1308  - Permanent charging error due to <specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this application. Please check the issue with hSenid Mobile system administrator.\n\n E1311  - Mobile terminated SMS messages are not enabled. Check your NCS configuration in provisioning.\n\n E1312  - Request is Invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1331  - < sourceAddress > is not allowed. Please use one of the values configured in alias configuration in the SLAs or send the request without < sourceAddres s>, so hSenid Mobile APIs will use the default source address to send the message to subscriber.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1335  - SMS sent to < application name > application could not be processed as the advertisement message length is too long. Maximum message length allowed for advertisements is < specify_max_adv_limit >.\n\n E1341  - Request failed. Errors occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white list numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary System Error occurred while delivering your request "
          }
        }
      },
      "responseOfSendServices": {
        "type": "object",
        "required": [
          "version",
          "requestId",
          "statusCode",
          "statusDetail",
          "destinationResponses"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "requestId": {
            "type": "string",
            "example": "101901031657410007",
            "description": "Uniquely identifies a request within TAP"
          },
          "destinationResponses": {
            "type": "array",
            "description": "The list of responses for the full list of addresses\n\nIt will be a collection with individual entry for each element in the address list of the request.\n\n -Address\n\n - timeStamp - Processed Time stamp\n\n - messageId - Message Identifier\n\n - statusCode - Status Code\n\n - statusDetail – Status detail",
            "items": {
              "$ref": "#/components/schemas/destinationResponses"
            }
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1311",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1331",
              "E1334",
              "E1335",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ]
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": " Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1308  - Permanent charging error due to <specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this application. Please check the issue with hSenid Mobile system administrator.\n\n E1311  - Mobile terminated SMS messages are not enabled. Check your NCS configuration in provisioning.\n\n E1312  - Request is invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1331  - < sourceAddress > is not allowed. Please use one of the values configured in alias configuration in the SLAs or send the request without < sourceAddress>, hSenid Mobile will use the default source address to send the message to subscriber.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1335  - SMS sent to < application name > application could not be processed as the advertisement message length is too long. Maximum message length allowed for advertisements is < specify_max_adv_limit >.\n\n E1341  - Request failed.An error occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white listed numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        }
      },
      "receiveServices": {
        "type": "object",
        "required": [
          "version",
          "applicationId",
          "sourceAddress",
          "message",
          "requestId",
          "encoding"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_000029",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "sourceAddress": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "Address of the source.\n\nsourceAddress: tel:94776177301\n\n at least one will be specified"
          },
          "message": {
            "type": "string",
            "description": "Content of the message sent by the user"
          },
          "requestId": {
            "type": "string",
            "example": "APP_000001",
            "description": "Uniquely identifies a request within TAP"
          },
          "encoding": {
            "type": "string",
            "enum": [
              0,
              240,
              245
            ],
            "example": "0",
            "description": "Encoding scheme used in the message.\n\nIf the encoding type is “Binary” then the message content will be represented as hex encoded.\n\n 0 - Text\n\n 240 - Flash SMS\n\n 245 - Binary SMS\n\n "
          }
        }
      },
      "responseOfReceiveServices": {
        "type": "object",
        "required": [
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1311",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1331",
              "E1334",
              "E1335",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ]
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": " Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1308  - Permanent charging error due to <specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this application. Please check the issue with hSenid Mobile system administrator.\n\n E1311  - Mobile terminated SMS messages are not enabled. Check your NCS configuration in provisioning.\n\n E1312  - Request is invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1331  - < sourceAddress > is not allowed. Please use one of the values configured in alias configuration in the SLAs or send the request without < sourceAddress>, so hSenid Mobile APIs will use the default source address to send the message to subscriber.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1335  - SMS sent to < application name > application could not be processed as the advertisement message length is too long. Maximum message length allowed for advertisements is < specify_max_adv_limit >.\n\n E1341  - Request failed.An error occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white listed numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        },
        "reportServices": {
          "type": "object",
          "required": [
            "destinationAddress",
            "timeStamp",
            "requestId",
            "deliveryStatus"
          ],
          "properties": {
            "destinationAddress": {
              "type": "string",
              "example": "tel:94772323232",
              "description": "Address of the subscriber"
            },
            "timeStamp": {
              "type": "string",
              "example": "20120113082110",
              "description": "The timestamp sent from the SMS.\n\"yyMMddHHmm\"\nyy – last two digits of the year (00-99)\nMM – month (01-12)\ndd – day (01-31)\nHH – hour (00-23)\nmm- minute (00-59)"
            },
            "requestId": {
              "type": "string",
              "example": "MSG_000111",
              "description": "Uniquely identifies a request within TAP"
            },
            "deliveryStatus": {
              "type": "string",
              "enum": [
                "DELIVERED",
                "EXPIRED",
                "DELETED",
                "UNDELIVERABLE",
                "ACCEPTED",
                "UNKNOWN",
                "REJECTED"
              ],
              "example": "DELIVERED",
              "description": "Enum from TAP to Application:DELIVERED, EXPIRED, DELETED,UNDELIVERABLE, ACCEPTED,UNKNOWN, REJECTED"
            }
          }
        }
      },
      "reportServices": {
        "type": "object",
        "required": [
          "destinationAddress",
          "timeStamp",
          "requestId",
          "deliveryStatus"
        ],
        "properties": {
          "destinationAddress": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "Address of the subscriber"
          },
          "timeStamp": {
            "type": "string",
            "example": "20120113082110",
            "description": "The timestamp sent from the SMS\n\n\"yyMMddHHmm\"\n\n yy – last two digits of the year (00-99)\n\n MM – month (01-12)\n\ndd – day (01-31)\n\nHH – hour (00-23)\n\n mm- minute (00-59)\n\n"
          },
          "requestId": {
            "type": "string",
            "example": "MSG_000111",
            "description": "Uniquely identifies a request within TAP"
          },
          "deliveryStatus": {
            "type": "string",
            "enum": [
              "DELIVERED",
              "EXPIRED",
              "DELETED",
              "UNDELIVERABLE",
              "ACCEPTED",
              "UNKNOWN",
              "REJECTED"
            ],
            "example": "DELIVERED",
            "description": "Enum from TAP to Application:\n\n DELIVERED ,EXPIRED ,DELETED ,UNDELIVERABLE ,ACCEPTED ,UNKNOWN ,REJECTED"
          }
        }
      },
      "responseOfReportServices": {
        "type": "object",
        "required": [
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1311",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1331",
              "E1334",
              "E1335",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ]
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": " Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1308  - Permanent charging error due to <specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this application. Please check the issue with hSenid Mobile system administrator.\n\n E1311  - Mobile terminated SMS messages are not enabled. Check your NCS configuration in provisioning.\n\n E1312  - Request is invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1331  - < sourceAddress > is not allowed. Please use one of the values configured in alias configuration in the SLAs or send the request without < sourceAddress>, hSenid Mobile APIs will use the default source address to send the message to subscriber.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1335  - SMS sent to < application name > application could not be processed as the advertisement message length is too long. Maximum message length allowed for advertisements is < specify_max_adv_limit >.\n\n E1341  - Request failed.An error occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white listed numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        }
      },
      "sendServices-2": {
        "type": "object",
        "required": [
          "version",
          "applicationId",
          "password",
          "sessionId",
          "message",
          "ussdOperation",
          "destinationAddress"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_000001",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "message": {
            "type": "string",
            "example": "1. Press One\n 2. Press two\n 3. Press three\n 4. Exit\n",
            "description": "Content of the message sent by the application"
          },
          "password": {
            "type": "string",
            "example": "password",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "sessionId": {
            "type": "string",
            "example": "1330929317043",
            "description": "Unique number that USSD Gateway assigns to the application for the duration of the session. This number will be maintained in all the messages throughout a single session. "
          },
          "ussdOperation": {
            "type": "string",
            "enum": [
              "mo-init",
              "mo-cont",
              "mt-init",
              "mt-cont",
              "mt-fin"
            ],
            "example": "mt-cont",
            "description": "USSD operation\n\n mo-cont:TAP to assign for and USSD message originated from subscriber, that comes after a init\n\nnmt-init: App to assign when a USSD session is initiated by an application\n\nmt-cont: App to assign for any USSD message originated from application, that comes after a init\n\nmt-fin: App to assign when session ends in final message\n\nData type will be string where the operation name itself will be used in the parameter value."
          },
          "destinationAddress": {
            "type": "string",
            "description": "Destination address should be a telephone number (tel - for MSISDN)\n\nNote : tel might be a masked number depending on the type of application ",
            "example": "tel:94776177301 "
          },
          "encoding": {
            "type": "string",
            "enum": [
              440
            ],
            "example": "440",
            "description": "Encoding scheme used in the message \n\n440 - Plain ASCII characters"
          }
        }
      },
      "responseOfSendServices-2": {
        "type": "object",
        "required": [
          "version",
          "requestId",
          "timeStamp",
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "requestId": {
            "type": "string",
            "example": "101901031657410007",
            "description": "Uniquely identifies a request within TAP"
          },
          "timeStamp": {
            "type": "string",
            "example": "20190103165801",
            "description": "Processed timestamp "
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1334",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ],
            "description": "The status code for the entire request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": "Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1308  - Permanent charging error due to<specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this Application. Please check the issue with Idea Mart system administrator.\n\n E1312  - Request is invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1341  - Request failed.An error occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white list numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        }
      },
      "receiveServices-2": {
        "type": "object",
        "required": [
          "version",
          "applicationId",
          "sessionId",
          "ussdOperation",
          "sourceAddress",
          "message",
          "requestId",
          "encoding"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_000029",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "message": {
            "type": "string",
            "example": "*141#",
            "description": "Content of the message sent by the user "
          },
          "requestId": {
            "type": "string",
            "example": "1330933229901",
            "description": "Uniquely identifies a request within TAP"
          },
          "sessionId": {
            "type": "string",
            "example": "1330929317043",
            "description": "Unique number that USSD Gateway assigns to the application for the duration of the session. This number will be maintained in all the messages throughout a single session. "
          },
          "ussdOperation": {
            "type": "string",
            "enum": [
              "mo-init",
              "mo-cont",
              "mt-init",
              "mt-cont",
              "mt-fin"
            ],
            "example": "mt-cont",
            "description": "USSD operation\n\nmo-cont:TAP to assign for and USSD message originated from subscriber, that comes after a init\n\nmt-init: App to assign when a USSD session is initiated by an application\n\nmt-cont: App to assign for any USSD message originated from application, that comes after a init\n\nmt-fin: App to assign when session ends in final message"
          },
          "sourceAddress": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "Address of the source.\n\nsourceAddress:tel:94776177301\n\n at least one will be specified"
          },
          "vlrAddress": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "VLR(Visitor Location Register) address of the sender"
          },
          "encoding": {
            "type": "string",
            "enum": [
              440
            ],
            "example": "440",
            "description": "Encoding scheme used in the message \n\n440 - Plain ASCII characters"
          }
        }
      },
      "responseOfReceiveServices-2": {
        "type": "object",
        "required": [
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1334",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ],
            "description": "The status code for the entire request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success",
            "description": "Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1308  - Permanent charging error due to<specify_reason E.g., Insufficient Balance>.\n\n E1309  - Requested SMS service is not allowed for this Application. Please check the issue with Idea Mart system administrator.\n\n E1312  - Request is invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1315  - Cannot find the requested service SMS or it is not active.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1334  - SMS sent to < application name > application could not be processed as the message length is too long. Maximum message length allowed is < specify_max_limit >.\n\n E1341  - Request failed.An error occurred while sending the request for all the destinations.\n\n E1342  - MSISDN is black listed. Not authorized to use the application <application_name>.\n\n E1343  - MSISDN is not white listed. Only white list numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        }
      },
      "directDebit": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "externalTrxId",
          "subscriberId",
          "paymentInstrumentName",
          "amount"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_999999",
            "description": "Used to identify the application. This is a unique identifier generated by the system when provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "95904999aa8edb0c038b3295fdd271de",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "externalTrxId": {
            "type": "string",
            "example": "12345678901234567890123456789012",
            "description": "This is the transaction ID generated by the application to map the request with the response.\n\nThis is needed to avoid any conflicts when SP inquires about a transaction.\n\nOnly a single value can be sent per request."
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "This can be the MSISDN of the subscriber to be charged. This is a unique identifier.\n\ntel:94776177301 is for MSISDN\n\nSubcriber: tel:94776177301\n\n Note: tel might be a masked number depending on the type of the application\n\nOnly a single value can be sent per request."
          },
          "paymentInstrumentName": {
            "type": "string",
            "example": "Mobile Account",
            "enum": [
              "Mobile Account"
            ],
            "description": "The name of the payment instrument.\n\nOnly a single value can be sent per request."
          },
          "accountId": {
            "type": "string",
            "example": "12345",
            "description": "The account of the payment instrument.\n\nOnly a single value can be sent per request."
          },
          "amount": {
            "type": "string",
            "example": "12345",
            "description": "Amount to be reserved for charging.\n\nOnly a single value can be sent per request.\n\n"
          },
          "currency": {
            "type": "string",
            "example": "LKR",
            "description": "Currency unit of the amount.\n\nOnly a single value can be sent per request.\n\nOnly ‘LKR’ is allowed."
          }
        }
      },
      "responseOfDirectDebit": {
        "type": "object",
        "required": [
          "externalTrxId",
          "internalTrxId",
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "externalTrxId": {
            "type": "string",
            "example": "12345678901234567890123456789012",
            "description": "This is the transaction ID generated by the application to map the request with the response.\n\nOnly a single value can be sent per request."
          },
          "internalTrxId": {
            "type": "string",
            "example": "321",
            "description": "Internal Transaction ID generated by the Payment Gateway for the transaction. This is unique per transaction.\n\nOnly a single value can be sent per request.\n\n"
          },
          "referenceId": {
            "type": "integer",
            "example": "12345678",
            "description": "Unique number generated by the system for the payment request. This is required to be entered in the external charging system/menu.\n\n"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-30T12:48:10-0400",
            "description": "System date and time of transaction.(success/fail)\n\nOnly a single value can be sent per request.\n\n"
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "enum": [
              "S1000",
              "E1303",
              "E1313",
              "E1317",
              "E1318",
              "E1319",
              "E1326",
              "E1328",
              "E1337",
              "E1343",
              "E1601",
              "E1602",
              "E1603"
            ],
            "description": "The status code for the entire request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": "Description of the status for the entire request.\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send requests to application <application-id>. Please use a provisioned system to send requests or contact system admin to provision the new IP.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1318  - Transaction limit per second has exceeded. Please throttle requests not to exceed the transaction limit. Contact TAP admin to increase the traffic limit.\n\n E1319  - Transaction limit for today has exceeded. Please try again tomorrow or contact TAP admin to increase the transaction per day limit.\n\n E1326  - Insufficient balance.\n\n E1328  - Charging operation {operation} not allowed. Please check the NCS configuration.\n\n E1337  - Duplicate request.\n\n E1343  - MSISDN is not white listed. Only white list numbers are allowed to send messages at this state.\n\n E1601  - System experienced an unexpected error.\n\n E1602  - Message delivery failed. Please retry\n\n E1603  - Temporary system error occurred while delivering your request "
          }
        }
      },
      "userSubscription": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "subscriberId",
          "action"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_999999",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "95904999aa8edb0c038b3295fdd271de",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "This can be the MSISDN of the subscriber to be charged. This is a unique identifier.\n\ntel: is for MSISDN\n\nSubcriber: tel:94776177301\n\n Note: tel might be a masked number depending on the type of the application\n\nOnly a single value can be sent per request."
          },
          "action": {
            "type": "string",
            "enum": [
              0,
              1
            ],
            "example": "0",
            "description": " 0 -user unsubscription\n\n 1 -user subscription\n\n "
          }
        }
      },
      "responseOfUserSubscription": {
        "type": "object",
        "required": [
          "version",
          "statusCode",
          "statusDetail",
          "subscriptionStatus"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0.",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request."
          },
          "statusDetail": {
            "type": "string",
            "example": "not registered",
            "description": "Description of the status for the entire request."
          },
          "subscriptionStatus": {
            "type": "string",
            "example": "UNREGISTERED.",
            "description": "Status of the subscription eg:UNREGISTERED,REGISTERED"
          }
        }
      },
      "baseSize": {
        "type": "object",
        "required": [
          "applicationId",
          "password"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_000201",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "39a8d1cb245029d0560619a2b388669c",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          }
        }
      },
      "responseOfBaseSize": {
        "type": "object",
        "required": [
          "version",
          "baseSize",
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "baseSize": {
            "type": "string",
            "example": "0",
            "description": "Number of registered users"
          },
          "version": {
            "type": "string",
            "example": "1.0.",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request."
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": "Description of the status for the entire request."
          }
        }
      },
      "subscriberStatus": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "subscriberId"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_999999",
            "description": "Unique identification of the application within the platform"
          },
          "password": {
            "type": "string",
            "example": "95904999aa8edb0c038b3295fdd271de",
            "description": "Password given when provisioning the application"
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "This is the MSISDN of the subscriber to be charged"
          }
        }
      },
      "responseOfSubscriberStatus": {
        "type": "object",
        "required": [
          "version",
          "statusCode",
          "statusDetail",
          "subscriptionStatus"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0.",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request."
          },
          "statusDetail": {
            "type": "string",
            "example": "Request was successfully processed",
            "description": "Description of the status for the entire request."
          },
          "subscriptionStatus": {
            "type": "string",
            "example": "UNREGISTERED.",
            "description": "Status of the subscription INITIAL,REG_PENDING,TRIAL,\n\n REGISTERED,UNREGISTERED and TEMPORARY_BLOCKED"
          }
        }
      },
      "getSubscriberChargingInfo": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "subscriberId"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_102672",
            "description": "Unique identification of the application within the platform"
          },
          "password": {
            "type": "string",
            "example": "cf2b9e361c13bc54b86d3c8180b0582fd",
            "description": "Password given when provisioning the application"
          },
          "subscriberIds": {
            "type": "string",
            "example": [
              "tel: 94772342345",
              "tel: 94772678845",
              "tel: 9477982563"
            ],
            "description": "MSISDNs of the list of subscribers. Eg: [tel: 94772342345, tel: 94772678845, tel:9477982563]\n\n If the application accepts masked numbers, list of\n\n masked numbers must be communicated in this parameter\n\n List can contain maximum of 10 MSISDNs per request"
          }
        }
      },
      "subscriberInfo": {
        "type": "object",
        "required": [
          "subscriberId"
        ],
        "properties": {
          "subscriberId": {
            "type": "string",
            "example": "tel:94772342345",
            "description": "MSISDN of the subscriber.\n\n If the application accepts masked numbers, \n\n list of masked numbers must be communicated in this parameter\n\n THIS IS A MANDATORY FILED"
          },
          "subscriptionStatus": {
            "type": "string",
            "example": "REGISTERED",
            "description": "Status of the subscription \n\n Eg: INITIAL,\n\n REG_PENDING, TRIAL, REGISTERED,\n\n UNREGISTERED and TEMPORARY_BLOCKED"
          },
          "lastChargedDate": {
            "type": "string",
            "example": "2020-01-23 22:03:22",
            "description": "The successful last charged date of the subscriber\n\n in the format of YYYY-MM-DD hh:mm:ss"
          },
          "lastChargedAmount": {
            "type": "string",
            "example": "30.00 LKR",
            "description": "The successful last charged amount for the\n\n subscriber with the currency code"
          },
          "numberType": {
            "type": "string",
            "example": "postpaid",
            "description": "Denotes whether the subscriber is prepaid or postpaid"
          },
          "statusCode": {
            "type": "string",
            "description": "Success or error code for each subscriber and for\n\n the entire request",
            "example": "S1000"
          },
          "statusDetail": {
            "type": "string",
            "example": "Request was successfully processes"
          }
        }
      },
      "responseOfgetSubscriberChargingInfo": {
        "type": "object",
        "required": [
          "version",
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response. \n\nIf version is not specified in the request, the latest version will be specified \n\nin the response."
          },
          "destinationResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subscriberInfo"
            }
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success.",
            "description": " Below table provides information on different subscription statuses returned \n\n by the getSubscriptionChargingInfo service.\n\n INITIAL - Subscription request is sent to the system. The subscription request\n\n might not be completed may be due to a system error. Not even the charging\n\n call is made during this instance.\n\n Parameters returns in response : subscriberId,subscriptionStatus,\n\n numberType,statusCode,statusDetail\n\n \n\n REG_PENDING - Subscription request is made and charging request is also sent\n\n but charging is not yet success.(Eg: Charging response not yet received from the IN,\n\n Insufficient balance)\n\n Parameters returns in response : subscriberId,subscriptionStatus,\n\n numberType,statusCode,statusDetail\n\n TRIAL - Subscription request is made and the platform allows subscribers to use\n\n the service without charging as they have a free trial period enabled.\n\n Parameters returns in response : subscriberId,subscriptionStatus,\n\n numberType,statusCode,statusDetail\n\n REGISTERED - Subscription request is made, charging is successful and the\n\n subscriber can receive the service.If the application registered to is a free\n\n application lastChargedDate to be omitted and lastChargedAmount to be sent as\n\n 0.00 LKR\n\n Parameters returns in response : subscriberId,subscriptionStatus,\n\n lastChargedDate,lastChargedAmount,numberType,statusCode,statusDetail\n\n UNREGISTERED - Subscription request is made and unsubscription is also\n\n done by the subscriber for the particular service.If the application unregistered\n\n from is a free application lastChargedDate to be omitted and lastChargedAmount to be\n\n sent as 0.00 LKR\n\n Parameters returns in response : subscriberId,subscriptionStatus, lastChargedDate,lastChargedAmount,numberType,statusCode,statusDetail\n\n TEMPORARY_BLOCKED - Subscription request is made initial charging was\n\n also successful and was in the registered status once but\n\n recursive charging has failed\n\n (Eg: Due to insufficient balance) and service is temporarily blocked for this subscriber\n\n If the application registered to is a free\n\n application lastChargedDate to be omitted and lastChargedAmount to be sent as 0.00 LKR\n\n Parameters returns in response : subscriberId,subscriptionStatus,lastChargedDate,lastChargedAmount,\n\n numberType,statusCode,statusDetail\n\n The status detail for the entire request\n\n S1000  - Process completed successfully for all the available destination numbers.\n\n E1303  - IP address from which this request originated is not provisioned to send request to application <application-id>. Please use a provisioned system to send request or contact system admin to provision the new IP.\n\n E1312  - Request is Invalid. <specify_the_reason> Refer the TAP NBL API Developer Guide for the mandatory fields and correct format of the request.\n\n E1313  - Authentication failed. No such active application with applicationId <application-id>, or no active service provider or the given password in the request is invalid.\n\n E1317  - < MSISDN > in request is invalid or not allowed.\n\n E1325  - Format of the address is invalid. Expected format is tel:94776177301.\n\n E1601  - System experienced an unexpected error.\n\n E1603  - Temporary System Error occurred while delivering your request "
          }
        }
      },
      "subscriberNotify": {
        "type": "object",
        "required": [
          "timeStamp",
          "version",
          "password",
          "applicationId",
          "password",
          "subscriberId",
          "frequency",
          "status"
        ],
        "properties": {
          "timeStamp": {
            "type": "string",
            "example": "20120113082110",
            "description": "The timestamp sent from the SMS.\n\"yyMMddHHmm\"\nyy – last two digits of the year (00-99)\nMM – month (01-12)\ndd – day (01-31)\nHH – hour (00-23)\nmm- minute (00-59)"
          },
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_999999",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "95904999aa8edb0c038b3295fdd271de",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "This can be the MSISDN of the subscriber to be charged. This is a unique identifier.\n\ntel:94776177301 is for MSISDN\n\nSubcriber: tel:94776177301\n\n Note: tel might be a masked number depending on the type of the application\n\nOnly a single value can be sent per request."
          },
          "frequency": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly"
            ],
            "example": "monthly",
            "description": "Frequency of notifications being sent"
          },
          "status": {
            "type": "string",
            "example": "REGISTERED.",
            "description": "Status of the subscription eg:UNREGISTERED,REGISTERED"
          }
        }
      },
      "responseOfSubscriberNotify": {
        "type": "object",
        "required": [
          "statusCode",
          "statusDetail"
        ],
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request."
          },
          "statusDetail": {
            "type": "string",
            "example": "Request was successfully processed",
            "description": "Description of the status for the entire request."
          }
        }
      },
      "applicationMetaData": {
        "type": "object",
        "properties": {
          "client": {
            "type": "ENUM",
            "example": "MOBILEAPP",
            "description": "Client type. values will be web browser or mobile app"
          },
          "device": {
            "type": "string",
            "example": "Samsung S10",
            "description": "Type/OS of device iPhone 6,Galaxy S5,PC, etc."
          },
          "os": {
            "type": "string",
            "example": "android 8",
            "description": "OS/Device version Android 6, iOS 5, Windows 10"
          },
          "appCode": {
            "type": "string",
            "description": "If you use app in store, your app identifier. If you use the web browser, web link",
            "example": "https://play.google.com/store/apps/details?id=lk"
          }
        }
      },
      "otpRequest": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "subscriberId"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_000375",
            "description": "ID of the application"
          },
          "password": {
            "type": "string",
            "example": "a07118cda5215fc6d01db5b2ab848edd",
            "description": "Password/API key given to uniquely identify the application"
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:94776177301",
            "description": "Mobile number of the end consumer"
          },
          "applicationHash": {
            "type": "string",
            "example": "abcdefgh",
            "description": "Hash string to determine which verification messages to send to your app."
          },
          "applicationMetaData": {
            "$ref": "#/components/schemas/applicationMetaData"
          }
        }
      },
      "responseOfOtpRequest": {
        "type": "object",
        "required": [
          "version",
          "statusCode",
          "referenceNo",
          "statusDetail"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version"
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request.\n\n Note: When the request is successful, statusCode will be S1000."
          },
          "referenceNo": {
            "type": "string",
            "example": "213561321321613",
            "description": "Reference key to uniquely Identify the request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success",
            "description": " The status detail for the entire request\n\n S1000  - Successfully send OTP challenge to [msisdn/sender ID]\n\n E1853  - Maximum number of OTP requests reached for [msisdn/sender ID]\n\n E1856  - Invalid Request\n\n E1857  - Internal Server Error Occur\n\n E1301  - Requested ApplicationID is not allowed within the System for operator unknown.\n\n "
          }
        }
      },
      "otpVerify": {
        "type": "object",
        "required": [
          "applicationId",
          "password",
          "referenceNo",
          "otp"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "APP_000375",
            "description": "ID of the application"
          },
          "password": {
            "type": "string",
            "example": "a07118cda5215fc6d01db5b2ab848edd",
            "description": "Password/API key given to uniquely identify the application"
          },
          "referenceNo": {
            "type": "string",
            "example": "213561321321613",
            "description": "Reference number returned with request OTP API"
          },
          "otp": {
            "type": "string",
            "example": "123564",
            "description": "One time password (OTP) to be used to MSISDN verification for the application"
          }
        }
      },
      "responseOfOtpVerify": {
        "type": "object",
        "required": [
          "version",
          "statusCode",
          "subscriptionStatus",
          "statusDetail"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version"
          },
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "description": "The status code for the entire request.\n\n Note: When the request is successful, statusCode will be S1000."
          },
          "subscriptionStatus": {
            "type": "ENUM",
            "example": "REGISTERED",
            "description": "Subscription status of the user"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success",
            "description": "The status detail for the entire request "
          },
          "subscriberId": {
            "type": "string",
            "example": "tel:sdfasdfasdfwqerqwtgfgsafgasfgasdfasdfasdfasdfasdfasf",
            "description": " Masked mobile number of the end consumer.\n\n Application has to use this for any subsequent request sent to TAP.\n\n S1000  - Successfully validated OTP for [msisdn/sender ID]\n\n E1850  - Invalid OTP\n\n E1851  - OTP request has being expired\n\n E1852  - Maximum number of OTP attempts had reached\n\n E1854  - Could not find OTP\n\n E1855  - Invalid Reference Number\n\n E1857  - Internal Server Error Occur \n\n E1301  - Requested ApplicationID is not allowed within the System for operator unknown.\n\n "
          }
        }
      },
      "locateServices": {
        "type": "object",
        "required": [
          "version",
          "applicationId",
          "password",
          "subscriberId",
          "serviceType"
        ],
        "properties": {
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "applicationId": {
            "type": "string",
            "example": "APP_000029",
            "description": "Used to identify the application. This is a unique identifier generated while provisioning an application.\n\nOnly a single value can be sent per request."
          },
          "password": {
            "type": "string",
            "example": "95904999aa8edb0c038b3295fdd271de",
            "description": "Used to authenticate the application originated message against the credentials of the service provider.\n\nEncoded, single value."
          },
          "subscriberId": {
            "type": "string",
            "example": "1.0",
            "description": "MSISDN of the subscriber for which the location update is needed. This is a unique identifier."
          },
          "serviceType": {
            "type": "ENUM",
            "example": "IMMEDIATE",
            "description": "Required MLP service type. Currently supports; IMMEDIATE"
          },
          "responseType": {
            "type": "ENUM",
            "example": "NO_DELAY",
            "description": "QoS parameter defines the accepted delay for the response.Accepted values and precedence is as below; 1. NO_DELAY 2. LOW_DELAY 3. DELAY_TOLERANCE\nNO_DELAY has the highest precedence. Eg: Third party application can not initiate location requests with NO_DELAY if the provisioned value is ‘LOW DELAY’. But can initiate location requests with LOW_DELAY and DELAY_TOLERENCE."
          },
          "horizontalAccuracy": {
            "type": "ENUM",
            "example": "100",
            "description": "QoS parameter defines the required horizontal accuracy for the location update.Accepted values and their precedence is as follows; 1. 100 2. 500 3. 1000 4. 1500\nMinimum value 100 has the highest precedence. Eg; Third party application can not initiate location requests with ‘100’ or ‘500’ if the provisioned value is ‘1000’. But can initiate location requests with ‘1000’ and ‘1500’."
          },
          "freshness": {
            "type": "ENUM",
            "example": "HIGH",
            "description": "QoS parameter defines the required freshness for the location update.Accepted values and their precedence is as follows; 1. HIGH_LOW 2. LOW_HIGH 3. HIGH 4. LOW\nHIGH_LOW has the highest precedence. Eg; Third party application can not initiate location requests with ‘HIGH_LOW’ if the provisioned value is ‘LOW_HIGH’. But can initiate location requests with ‘LOW_HIGH’, ‘HIGH’ and ‘LOW’."
          }
        }
      },
      "responseOfLocateServices": {
        "type": "object",
        "required": "_ version _ messageID _ latitude _ longitude _ freshness _ horizontalAccuracy _ timeStamp _ statusCode _ statusDetail",
        "properties": {
          "statusCode": {
            "type": "string",
            "example": "S1000",
            "enum": [
              "S1000",
              "E1303",
              "E1308",
              "E1309",
              "E1312",
              "E1313",
              "E1315",
              "E1317",
              "E1318",
              "E1319",
              "E1325",
              "E1334",
              "E1341",
              "E1342",
              "E1343",
              "E1601",
              "E1603"
            ],
            "description": "The status code for the entire request"
          },
          "statusDetail": {
            "type": "string",
            "example": "Success",
            "description": "Description of the status for the entire request."
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-30T12:48:10-0400",
            "description": "System date and time of transaction.(success/fail)\n\nOnly a single value can be sent per request.\n\n"
          },
          "version": {
            "type": "string",
            "example": "1.0",
            "description": "API version shall be numbered as 1.0, 2.0 etc.\n\nIf version is specified in the request, same version must be sent in the response.\n\nIf version is not specified in the request, the latest version will be specified in the response."
          },
          "messageID": {
            "type": "string",
            "example": "101901031657410007",
            "description": "MessageID to uniquely Identify the request"
          },
          "latitude": {
            "type": "string",
            "example": "",
            "description": "Latitude coordinate of the location of the subscriber."
          },
          "longitude": {
            "type": "string",
            "example": "",
            "description": "Longitude coordinate of the location of the subscriber."
          },
          "freshness": {
            "type": "Integer",
            "example": "",
            "description": "Actual freshness of the responded location update. Value shall be defined in minutes."
          },
          "horizontalAccuracy": {
            "type": "Integer",
            "example": 1,
            "description": "Actual horizontal accuracy of the responded location update. Value shall be defined in meters."
          },
          "subscriberState": {
            "type": "Boolean",
            "example": true,
            "description": "Power on/off state of the target subscriber’s mobile phone. True: power on False: power off"
          }
        }
      },
      "responseOfSimpleIVRMenuServices": {
        "type": "object",
        "required": [
          "name",
          "header",
          "audio"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "name",
            "description": "Menu (User inputs are used to continue with the call)"
          },
          "header": {
            "type": "string",
            "description": "The first audio file that shall be played. This could be the audio file for greeting."
          },
          "audio": {
            "type": "string",
            "description": "The audio file that shall be played according to the user input."
          },
          "menu": {
            "type": "string",
            "description": "Represents the sub menu. Includes the user input value and the respective audio file that shall be played."
          }
        }
      },
      "responseOfSingleAudioServices": {
        "type": "object",
        "required": [
          "name",
          "audio"
        ],
        "properties": {
          "name": {
            "type": "String",
            "example": "hello",
            "description": "Type of the call to be made. Whether it is a play once or menu."
          },
          "audio": {
            "type": "String",
            "example": "audio",
            "description": "Audio file uploaded when provisioning."
          },
          "refresh": {
            "type": "String",
            "example": "true",
            "description": "If provided true, IVR server will not cache the wav files."
          }
        }
      },
      "index": {
        "x-sendServices": {
          "$ref": "sendServices.yaml"
        },
        "x-responseOfSendServices": {
          "$ref": "responseOfSendServices.yaml"
        },
        "x-receiveServices": {
          "$ref": "receiveServices.yaml"
        },
        "x-responseOfReceiveServices": {
          "$ref": "responseOfReceiveServices.yaml"
        },
        "x-reportServices": {
          "$ref": "reportServices.yaml"
        },
        "x-responseOfReportServices": {
          "$ref": "responseOfReportServices.yaml"
        },
        "x-destinationResponses": {
          "$ref": "destinationResponses.yaml"
        }
      },
      "index-2": {
        "x-sendServices": {
          "$ref": "sendServices.yaml"
        },
        "x-responseOfSendServices": {
          "$ref": "responseOfSendServices.yaml"
        },
        "x-receiveServices": {
          "$ref": "receiveServices.yaml"
        },
        "x-responseOfReceiveServices": {
          "$ref": "responseOfReceiveServices.yaml"
        }
      },
      "index-3": {
        "x-directDebit": {
          "$ref": "directDebit.yaml"
        },
        "x-responseOfDirectDebit": {
          "$ref": "responseOfDirectDebit.yaml"
        }
      },
      "index-4": {
        "x-userSubscription": {
          "$ref": "userSubscription.yaml"
        },
        "x-responseOfUserSubscription": {
          "$ref": "responseOfUserSubscription.yaml"
        },
        "x-baseSize": {
          "$ref": "baseSize.yaml"
        },
        "x-responseOfBaseSize": {
          "$ref": "responseOfBaseSize.yaml"
        },
        "x-subscriberStatus": {
          "$ref": "subscriberStatus.yaml"
        },
        "x-responseOfSubscriberStatus": {
          "$ref": "responseOfSubscriberStatus.yaml"
        },
        "x-responseOfSubscriberNotify": {
          "$ref": "responseOfSubscriberNotify.yaml"
        },
        "x-getSubscriberChargingInfo": {
          "$ref": "getSubscriberChargingInfo.yaml"
        },
        "x-responseOfgetSubscriberChargingInfo": {
          "$ref": "responseOfgetSubscriberChargingInfo.yaml"
        },
        "x-subscriberinfo": {
          "$ref": "subscriberInfo.yaml"
        }
      },
      "index-5": {
        "x-otpRequest": {
          "$ref": "otpRequest.yaml"
        },
        "x-responseOfOtpRequest": {
          "$ref": "responseOfOtpRequest.yaml"
        },
        "x-otpVerify": {
          "$ref": "otpVerify.yaml"
        },
        "x-responseOfOtpVerify": {
          "$ref": "responseOfOtpVerify.yaml"
        },
        "x-applicationMetaData": {
          "$ref": "applicationMetaData.yaml"
        }
      },
      "index-6": {
        "x-locateServices": {
          "$ref": "locateServices.yaml"
        },
        "x-responseOfLocateServices": {
          "$ref": "responseOfLocateServices.yaml"
        }
      },
      "index-7": {
        "x-responseOfSingleAudioServices": {
          "$ref": "responseOfSingleAudioServices.yaml"
        },
        "x-responseOfSimpleIVRMenuServices": {
          "$ref": "responseOfSimpleIVRMenuServices.yaml"
        }
      }
    }
  }
}